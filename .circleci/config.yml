version: 2.1

orbs:
  node: circleci/node@4.1.0

executors:
  ruby_image:
    docker:
      - image: circleci/ruby:3.0.1-buster-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: postgres
          RAILS_ENV: test
      - image: circleci/postgres:10.1-alpine-ram
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: app_test
          POSTGRES_PASSWORD:

    working_directory: ~/app

commands:
  setup_environment:
    steps:
      - checkout

      - node/install:
          node-version: 16.4.0
          install-yarn: true

      - run:
          name: Which versions?
          command: |
            bundle -v
            node --version
            npm --version

      # https://circleci.com/docs/2.0/caching/
      - restore_cache:
          keys:
            - questlog-bundle-{{ checksum "Gemfile.lock" }}
            - questlog-bundle-

      - run: # Install Ruby dependencies
          name: Bundle Install
          command: bundle check || bundle install

      - save_cache:
          key: questlog-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          keys:
            - questlog-yarn-{{ checksum "yarn.lock" }}
            - questlog-yarn-

      - run:
          name: Yarn Install
          command: |
            yarn install --cache-folder ~/.cache/yarn --frozen-lockfile
            yarn deduplicate --fail || (echo 'Duplicate packages in yarn.lock. Run `yarn deduplicate` locally.'; exit 1)

      - save_cache:
          key: questlog-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: |
            bin/rails db:create
            bin/rails db:schema:load

jobs:
  lints:
    executor: ruby_image
    steps:
      - setup_environment
      - run:
          name: Lints
          command: yarn lints

  javascript_tests:
    executor: ruby_image
    steps:
      - setup_environment
      - run:
          name: JavaScript tests
          command: yarn jest

  unit_tests:
    executor: ruby_image
    steps:
      - setup_environment
      - run:
          name: Run unit tests
          command: |
            bundle exec rspec --exclude-pattern "**/features/*_spec.rb"
            # bundle exec rspec --profile 10 \
            #                   --format RspecJunitFormatter \
            #                   --out test_results/rspec.xml \
            #                   --format progress \
            #                   $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      - store_test_results: # https://circleci.com/docs/2.0/collect-test-data/
          path: test_results

  feature_tests_chrome_headless:
    executor: ruby_image
    steps:
      - setup_environment
      - run:
          name: Run feature tests on Chrome headless
          command: COVERAGE=false DRIVER=selenium_chrome_headless bundle exec rspec spec/features

  feature_tests_chrome:
    executor: ruby_image
    steps:
      - setup_environment
      - run:
          name: Run feature tests on Chrome
          command: COVERAGE=false DRIVER=chrome bundle exec rspec spec/features

workflows:
  version: 2
  build_and_test:
    jobs:
      - lints
      - javascript_tests
      - unit_tests
      - feature_tests_chrome_headless
      - feature_tests_chrome
